name: Release esp32osc

on:
  push:
    branches: [ "master" ]

  workflow_dispatch:

env:
  board: esp32-poe

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Set up job
      run: echo $HOME/.local/bin >> $GITHUB_PATH
    - name: Cache PlatformIO installation
      id: platformio-install
      uses: actions/cache@v3
      with:
        path: ~/.local/
        key: ${{ runner.os }}-platformio-install
    - name: Install PlatformIO
      if: steps.platformio-install.outputs.cache-hit != 'true'
      run: pip install --upgrade platformio
    - name: Checkout project
      uses: actions/checkout@v3
      with:
        ssh-key: ${{ secrets.WEBSERIALPRO_SSH_KEY }}
        submodules: true
    - name: Calculate version
      id: tag_version_dryrun
      uses: mathieudutour/github-tag-action@v6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        dry_run: true
    - name: Cache PlatformIO platform and tools
      id: platformio
      uses: actions/cache@v3
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-platformio
    - name: Cache PlatformIO project dependencies
      id: pio-libdeps
      uses: actions/cache@v3
      with:
        path: .pio/libdeps/
        key: ${{ runner.os }}-pio-libdeps
    - name: Install Platformio project dependencies
      if: steps.platformio.outputs.cache-hit != 'true' || steps.pio-libdeps.outputs.cache-hit != 'true'
      run: pio pkg install
    - name: Build firmware
      id: build-firmware
      env:
        VERSION: ${{ steps.tag_version_dryrun.outputs.new_tag }}
      run: |
        pio run -e ${{ env.board }} -t buildprog
        echo "::set-output name=file::.pio/build/$board/firmware.bin"
    - name: Upload firmware
      uses: actions/upload-artifact@v3
      with:
        name: firmware
        path: ${{ steps.build-firmware.outputs.file }}
    - name: Build filesystem
      id: build-filesystem
      run: |
        ls .pio/build/$board/
        pio run -e ${{ env.board }} -t buildfs
        echo "::set-output name=file::.pio/build/$board/spiffs.bin"
    - name: Upload filesystem
      uses: actions/upload-artifact@v3
      with:
        name: filesystem
        path: ${{ steps.build-filesystem.outputs.file }}
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}
        artifacts: ${{ steps.build-firmware.outputs.file }},${{ steps.build-filesystem.outputs.file }}
        artifactErrorsFailBuild: true